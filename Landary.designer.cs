#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaundryManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Laundry")]
	public partial class LaundryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCloth(Cloth instance);
    partial void UpdateCloth(Cloth instance);
    partial void DeleteCloth(Cloth instance);
    #endregion
		
		public LaundryDataContext() : 
				base(global::LaundryManager.Properties.Settings.Default.LaundryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LaundryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaundryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaundryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaundryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cloth> Cloths
		{
			get
			{
				return this.GetTable<Cloth>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cloths")]
	public partial class Cloth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Image;
		
		private System.DateTime _LastWashDate;
		
		private System.DateTime _LastWearDate;
		
		private System.Nullable<int> _WashingCooldown;
		
		private int _CurrentCooldownState;
		
		private System.Nullable<int> _MaterialId;
		
		private System.Nullable<int> _TypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnLastWashDateChanging(System.DateTime value);
    partial void OnLastWashDateChanged();
    partial void OnLastWearDateChanging(System.DateTime value);
    partial void OnLastWearDateChanged();
    partial void OnWashingCooldownChanging(System.Nullable<int> value);
    partial void OnWashingCooldownChanged();
    partial void OnCurrentCooldownStateChanging(int value);
    partial void OnCurrentCooldownStateChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    #endregion
		
		public Cloth()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWashDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastWashDate
		{
			get
			{
				return this._LastWashDate;
			}
			set
			{
				if ((this._LastWashDate != value))
				{
					this.OnLastWashDateChanging(value);
					this.SendPropertyChanging();
					this._LastWashDate = value;
					this.SendPropertyChanged("LastWashDate");
					this.OnLastWashDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWearDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastWearDate
		{
			get
			{
				return this._LastWearDate;
			}
			set
			{
				if ((this._LastWearDate != value))
				{
					this.OnLastWearDateChanging(value);
					this.SendPropertyChanging();
					this._LastWearDate = value;
					this.SendPropertyChanged("LastWearDate");
					this.OnLastWearDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WashingCooldown", DbType="Int")]
		public System.Nullable<int> WashingCooldown
		{
			get
			{
				return this._WashingCooldown;
			}
			set
			{
				if ((this._WashingCooldown != value))
				{
					this.OnWashingCooldownChanging(value);
					this.SendPropertyChanging();
					this._WashingCooldown = value;
					this.SendPropertyChanged("WashingCooldown");
					this.OnWashingCooldownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCooldownState", DbType="Int NOT NULL")]
		public int CurrentCooldownState
		{
			get
			{
				return this._CurrentCooldownState;
			}
			set
			{
				if ((this._CurrentCooldownState != value))
				{
					this.OnCurrentCooldownStateChanging(value);
					this.SendPropertyChanging();
					this._CurrentCooldownState = value;
					this.SendPropertyChanged("CurrentCooldownState");
					this.OnCurrentCooldownStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
